apiVersion: v1
kind: Namespace
metadata:
  name: deepstack
  labels:
    name: deepstack
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: deepstack
  name: deepstack-datastore-pvc
spec:
  storageClassName: nfs
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: deepstack
  name: deepstack-modelstore-pvc
spec:
  storageClassName: nfs
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: deepstack-configmap
  namespace: deepstack
data:
  TZ: "${TIMEZONE}"
  PGID: "${PGID}"
  PUID: "${PUID}"
  VISION-DETECTION: "True"
  VISION-SCENE: "True"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deepstack
  namespace: deepstack
  labels:
    app: deepstack
spec:
  replicas: 1
  selector:
    matchLabels:
      app: deepstack
  template:
    metadata:
      labels:
        app: deepstack
    spec:
      containers:
        - name: deepstack
          image: deepquestai/deepstack:arm64-2021.06.1
          envFrom:
            - configMapRef:
                name: deepstack-configmap
          ports:
            - name: svc-ui
              containerPort: 5000
          resources:
            limits:
              memory: "2Gi"
              cpu: "2"
            requests:
              memory: "800Mi"
              cpu: "1"
          volumeMounts:
            - mountPath: /datastore
              name: deepstack-datastore
            - mountPath: /modelstore/detection
              name: deepstack-modelstore
      volumes:
        - name: deepstack-datastore
          persistentVolumeClaim:
            claimName: deepstack-datastore-pvc
        - name: deepstack-modelstore
          persistentVolumeClaim:
            claimName: deepstack-modelstore-pvc
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: deepstack-has
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: deepstack
  minReplicas: 1
  maxReplicas: 4
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50
---
apiVersion: v1
kind: Service
metadata:
  name: deepstack-svc
  namespace: deepstack
spec:
  selector:
    app: deepstack
  ports:
    - name: 5000-tcp
      port: 5000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: deepstack-ingress
  namespace: deepstack
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
    - host: deepstack.${NETWORK_HOSTNAME_SUFFIX}
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: deepstack-svc
                port:
                  name: 5000-tcp
