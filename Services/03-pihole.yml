kind: PersistentVolume
apiVersion: v1
metadata:
  name: pihole-pv
  namespace: pihole
spec:
  storageClassName: pihole-manual
  persistentVolumeReclaimPolicy: Retain
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  claimRef:
    name: pihole-pvc
    namespace: pihole
  hostPath:
    path: "/var/lib/pihole"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  namespace: pihole
  name: pihole-pvc
spec:
  storageClassName: pihole-manual
  accessModes:
    - ReadWriteMany
  claimRef:
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pihole-configmap
  namespace: pihole
data:
  TZ: "${PIHOLE_TIMEZONE}"
  ADMIN_EMAIL: "<${PIHOLE_ADMINEMAIL}>"
  DNS1: "10.43.0.20"
  DNS2: "10.43.0.20"
---
apiVersion: v1
kind: Secret
metadata:
  name: pihole-secret
  namespace: pihole
data:
  WEBPASSWORD: ${PIHOLE_PASSWORD}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pihole
  namespace: pihole
  labels:
    app: pihole
spec:
  serviceName: "pihole"
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: pihole
  template:
    metadata:
      labels:
        app: pihole
    spec:
      containers:
        - name: pihole
          image: docker.io/pihole/pihole:latest
          envFrom:
            - configMapRef:
                name: pihole-configmap
            - secretRef:
                name: pihole-secret
          ports:
            - name: svc-53-udp
              containerPort: 53
              protocol: UDP
            - name: svc-53-tcp
              containerPort: 53
              protocol: TCP
            - name: svc-ui
              containerPort: 80
              protocol: TCP
          resources:
            limits:
              memory: "300Mi"
              cpu: "250m"
            requests:
              memory: "50Mi"
              cpu: "100m"
          volumeMounts:
            - mountPath: /etc/pihole
              name: pihole-etc
      volumes:
        - name: pihole-etc
          persistentVolumeClaim:
            claimName: pihole-pvc
---
kind: Service
apiVersion: v1
metadata:
  name: pihole-ui-svc
  namespace: pihole
spec:
  selector:
    app: pihole
  type: ClusterIP
  ports:
    - name: 80-tcp
      port: 80
      targetPort: 80
      protocol: TCP
---
kind: Service
apiVersion: v1
metadata:
  name: pihole-dns-svc
  namespace: pihole
spec:
  selector:
    app: pihole
  type: ClusterIP
  clusterIP: 10.43.0.30
  ports:
    - name: 53-tcp
      port: 53
      targetPort: 53
      protocol: TCP
    - name: 53-udp
      port: 53
      targetPort: 53
      protocol: UDP
---
apiVersion: v1
kind: Service
metadata:
  name: pihole-dns-udp
  namespace: pihole
spec:
  selector:
    app: pihole
  ports:
    - name: 53-udp
      port: 53
      targetPort: 53
      protocol: UDP
  externalTrafficPolicy: Local
  type: LoadBalancer
status:
  loadBalancer:
    ingress:
      - ip: ${CLUSTER_HOSTNETWORKINGIPADDRESS}
---
apiVersion: v1
kind: Service
metadata:
  name: pihole-dns-tcp
  namespace: pihole
spec:
  selector:
    app: pihole
  ports:
    - name: 53-tcp
      port: 53
      targetPort: 53
      protocol: TCP
  externalTrafficPolicy: Local
  type: LoadBalancer
status:
  loadBalancer:
    ingress:
      - ip: ${CLUSTER_HOSTNETWORKINGIPADDRESS}
